<?xml version="1.0" encoding="UTF-8"?> <svg xmlns="http://www.w3.org/2000/svg" version="1.2" xml:space="preserve" width="700" height="300" x="23" y="50" viewBox="0 0 700 300" preserveAspectRatio="xMidYMin slice"> <style type="text/css"><![CDATA[ /* Style definition file generated by highlight 3.60, http://www.andre-simon.de/ */ rect { fill:#282c34; } /*g { font-size: 10; font-family: 'Courier New',monospace; white-space: pre;}*/ g { font-family: 'DejaVu Sans Mono', monospace; font-style: normal; font-size: 14px; white-space: pre; } text { fill:#abb2bf; } tspan.num { fill:#d19a66; } tspan.esc { fill:#56b6c2; } tspan.str { fill:#98c379; } tspan.pps { fill:#56b6c2; } tspan.slc { fill:#545862; font-style:italic; } tspan.com { fill:#545862; font-style:italic; } tspan.ppc { fill:#be5046; } tspan.opt { fill:#abb2bf; } tspan.ipl { fill:#d19a66; } tspan.lin { fill:#565c64; } tspan.kwa { fill:#c678dd; font-weight:bold; } tspan.kwb { fill:#61afef; font-weight:bold; } tspan.kwc { fill:#e06c75; font-weight:bold; } tspan.kwd { fill:#e5c07b; font-weight:bold; } tspan.kwe { fill:#be5046; font-weight:bold; } tspan.kwf { fill:#d19a66; font-weight:bold; } ]]></style> <desc>example.py</desc> <g> <rect x="0" y="0" width="100%" height="100%"></rect> <text x="10" y="20"><tspan class="kwa">class </tspan><tspan class="kwd">OverlySimplifiedExampleAdapter</tspan><tspan class="opt">(</tspan>Adapter<tspan class="opt">):</tspan></text> <text x="10" y="40"></text> <text x="10" y="60">    <tspan class="kwa">def </tspan><tspan class="kwd">setup</tspan><tspan class="opt">(</tspan>self<tspan class="opt">, </tspan>input_path<tspan class="opt">, </tspan>_server_map<tspan class="opt">):</tspan></text> <text x="10" y="80">        <tspan class="opt">...</tspan></text> <text x="10" y="100">        self<tspan class="opt">.</tspan>fuzz<tspan class="opt">[</tspan><tspan class="str">"inputs"</tspan><tspan class="opt">] = </tspan><tspan class="kwb">list</tspan><tspan class="opt">()</tspan></text> <text x="10" y="120">        <tspan class="kwa">for </tspan><tspan class="kwb">file </tspan><tspan class="kwa">in </tspan>self<tspan class="opt">.</tspan><tspan class="kwd">scan_path</tspan><tspan class="opt">(</tspan>input_path<tspan class="opt">):</tspan></text> <text x="10" y="140">            <tspan class="kwa">if </tspan><tspan class="kwb">file</tspan><tspan class="opt">.</tspan><tspan class="kwd">endswith</tspan><tspan class="opt">(</tspan><tspan class="str">".html"</tspan><tspan class="opt">)</tspan></text> <text x="10" y="160">                self<tspan class="opt">.</tspan>fuzz<tspan class="opt">[</tspan><tspan class="str">"inputs"</tspan><tspan class="opt">].</tspan><tspan class="kwd">append</tspan><tspan class="opt">(</tspan><tspan class="kwb">file</tspan><tspan class="opt">)</tspan></text> <text x="10" y="180"></text> <text x="10" y="200">    <tspan class="kwa">def </tspan><tspan class="kwd">generate</tspan><tspan class="opt">(</tspan>self<tspan class="opt">, </tspan>testcase<tspan class="opt">, </tspan>_server_map<tspan class="opt">):</tspan></text> <text x="10" y="220">        sample <tspan class="opt">= </tspan>random<tspan class="opt">.</tspan><tspan class="kwd">choice</tspan><tspan class="opt">(</tspan>self<tspan class="opt">.</tspan>fuzz<tspan class="opt">[</tspan><tspan class="str">"inputs"</tspan><tspan class="opt">])</tspan></text> <text x="10" y="240">        fuzzed <tspan class="opt">= </tspan><tspan class="str">"out/path/fuzzed.html"</tspan></text> <text x="10" y="260">        subprocess<tspan class="opt">.</tspan><tspan class="kwd">check_output</tspan><tspan class="opt">([</tspan><tspan class="str">"/path/to/fuzzer"</tspan><tspan class="opt">, </tspan><tspan class="str">"-i"</tspan><tspan class="opt">, </tspan>sample<tspan class="opt">, </tspan><tspan class="str">"-o"</tspan><tspan class="opt">, </tspan>fuzzed<tspan class="opt">])</tspan></text> <text x="10" y="280">        testcase<tspan class="opt">.</tspan><tspan class="kwd">add_from_file</tspan><tspan class="opt">(</tspan>fuzzed<tspan class="opt">, </tspan>testcase<tspan class="opt">.</tspan>landing_page<tspan class="opt">)</tspan></text> <text x="10" y="300"></text> </g> </svg> <!-- SVG generated by Highlight 3.60, http://www.andre-simon.de/ --> 